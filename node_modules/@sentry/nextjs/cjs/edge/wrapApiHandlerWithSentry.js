var {
  _optionalChain
} = require('@sentry/utils/cjs/buildPolyfills');

Object.defineProperty(exports, '__esModule', { value: true });

const core = require('@sentry/core');
const edgeWrapperUtils = require('./utils/edgeWrapperUtils.js');

/**
 * Wraps a Next.js edge route handler with Sentry error and performance instrumentation.
 */
function wrapApiHandlerWithSentry(
  handler,
  parameterizedRoute,
) {
  return async function ( ...args) {
    const req = args[0];

    const activeSpan = !!_optionalChain([core.getCurrentHub, 'call', _ => _(), 'access', _2 => _2.getScope, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getSpan, 'call', _5 => _5()]);

    const wrappedHandler = edgeWrapperUtils.withEdgeWrapping(handler, {
      spanDescription:
        activeSpan || !(req instanceof Request)
          ? `handler (${parameterizedRoute})`
          : `${req.method} ${parameterizedRoute}`,
      spanOp: activeSpan ? 'function' : 'http.server',
      mechanismFunctionName: 'wrapApiHandlerWithSentry',
    });

    return await wrappedHandler.apply(this, args);
  };
}

/**
 * @deprecated Use `wrapApiHandlerWithSentry` instead.
 */
const withSentryAPI = wrapApiHandlerWithSentry;

exports.withSentryAPI = withSentryAPI;
exports.wrapApiHandlerWithSentry = wrapApiHandlerWithSentry;
//# sourceMappingURL=wrapApiHandlerWithSentry.js.map
