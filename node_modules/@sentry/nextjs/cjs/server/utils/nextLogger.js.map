{"version":3,"file":"nextLogger.js","sources":["../../../../src/server/utils/nextLogger.ts"],"sourcesContent":["/* eslint-disable no-console */\nimport * as chalk from 'chalk';\n\n// This is nextjs's own logging formatting, vendored since it's not exported. See\n// https://github.com/vercel/next.js/blob/c3ceeb03abb1b262032bd96457e224497d3bbcef/packages/next/build/output/log.ts#L3-L11\n// and\n// https://github.com/vercel/next.js/blob/de7aa2d6e486c40b8be95a1327639cbed75a8782/packages/next/lib/eslint/runLintCheck.ts#L321-L323.\n\nconst prefixes = {\n  wait: `${chalk.cyan('wait')}  -`,\n  error: `${chalk.red('error')} -`,\n  warn: `${chalk.yellow('warn')}  -`,\n  ready: `${chalk.green('ready')} -`,\n  info: `${chalk.cyan('info')}  -`,\n  event: `${chalk.magenta('event')} -`,\n  trace: `${chalk.magenta('trace')} -`,\n};\n\nexport const formatAsCode = (str: string): string => chalk.bold.cyan(str);\n\nexport const nextLogger: {\n  [key: string]: (...message: unknown[]) => void;\n} = {\n  wait: (...message) => console.log(prefixes.wait, ...message),\n  error: (...message) => console.error(prefixes.error, ...message),\n  warn: (...message) => console.warn(prefixes.warn, ...message),\n  ready: (...message) => console.log(prefixes.ready, ...message),\n  info: (...message) => console.log(prefixes.info, ...message),\n  event: (...message) => console.log(prefixes.event, ...message),\n  trace: (...message) => console.log(prefixes.trace, ...message),\n};\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,QAAA,GAAA;AACA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA;AACA,EAAA,KAAA,EAAA,CAAA,EAAA,KAAA,CAAA,GAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA;AACA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA;AACA,EAAA,KAAA,EAAA,CAAA,EAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA;AACA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,GAAA,CAAA;AACA,EAAA,KAAA,EAAA,CAAA,EAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA;AACA,EAAA,KAAA,EAAA,CAAA,EAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA;AACA,CAAA,CAAA;AACA;AACA,MAAA,YAAA,GAAA,CAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AACA;AACA,MAAA,UAAA;AACA;AACA,GAAA;AACA,EAAA,IAAA,EAAA,CAAA,GAAA,OAAA,KAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,EAAA,GAAA,OAAA,CAAA;AACA,EAAA,KAAA,EAAA,CAAA,GAAA,OAAA,KAAA,OAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAA,GAAA,OAAA,CAAA;AACA,EAAA,IAAA,EAAA,CAAA,GAAA,OAAA,KAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,EAAA,GAAA,OAAA,CAAA;AACA,EAAA,KAAA,EAAA,CAAA,GAAA,OAAA,KAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,KAAA,EAAA,GAAA,OAAA,CAAA;AACA,EAAA,IAAA,EAAA,CAAA,GAAA,OAAA,KAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,EAAA,GAAA,OAAA,CAAA;AACA,EAAA,KAAA,EAAA,CAAA,GAAA,OAAA,KAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,KAAA,EAAA,GAAA,OAAA,CAAA;AACA,EAAA,KAAA,EAAA,CAAA,GAAA,OAAA,KAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,KAAA,EAAA,GAAA,OAAA,CAAA;AACA;;;;;"}