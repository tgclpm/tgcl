{"version":3,"file":"createReplayEnvelope.js","sources":["../../../../src/util/createReplayEnvelope.ts"],"sourcesContent":["import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n"],"names":[],"mappings":";;AAGA;AACA;AACA;AACA;AACA,SAAA,oBAAA;AACA,EAAA,WAAA;AACA,EAAA,aAAA;AACA,EAAA,GAAA;AACA,EAAA,MAAA;AACA,EAAA;AACA,EAAA,OAAA,cAAA;AACA,IAAA,0BAAA,CAAA,WAAA,EAAA,+BAAA,CAAA,WAAA,CAAA,EAAA,MAAA,EAAA,GAAA,CAAA;AACA,IAAA;AACA,MAAA,CAAA,EAAA,IAAA,EAAA,cAAA,EAAA,EAAA,WAAA,CAAA;AACA,MAAA;AACA,QAAA;AACA,UAAA,IAAA,EAAA,kBAAA;AACA;AACA;AACA;AACA,UAAA,MAAA;AACA,YAAA,OAAA,aAAA,KAAA,QAAA,GAAA,IAAA,WAAA,EAAA,CAAA,MAAA,CAAA,aAAA,CAAA,CAAA,MAAA,GAAA,aAAA,CAAA,MAAA;AACA,SAAA;AACA,QAAA,aAAA;AACA,OAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA;;;;"}