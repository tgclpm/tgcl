{"version":3,"file":"isRrwebError.js","sources":["../../../../src/util/isRrwebError.ts"],"sourcesContent":["import type { Event } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // Check if any exception originates from rrweb\n  return event.exception.values.some(exception => {\n    if (!exception.stacktrace || !exception.stacktrace.frames || !exception.stacktrace.frames.length) {\n      return false;\n    }\n\n    return exception.stacktrace.frames.some(frame => frame.filename && frame.filename.includes('/rrweb/src/'));\n  });\n}\n"],"names":[],"mappings":"AAEA;AACA;AACA;AACA,SAAA,YAAA,CAAA,KAAA,EAAA;AACA,EAAA,IAAA,KAAA,CAAA,IAAA,IAAA,CAAA,KAAA,CAAA,SAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,MAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,IAAA,OAAA,KAAA,CAAA;AACA,GAAA;AACA;AACA;AACA,EAAA,OAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,SAAA,IAAA;AACA,IAAA,IAAA,CAAA,SAAA,CAAA,UAAA,IAAA,CAAA,SAAA,CAAA,UAAA,CAAA,MAAA,IAAA,CAAA,SAAA,CAAA,UAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,MAAA,OAAA,KAAA,CAAA;AACA,KAAA;AACA;AACA,IAAA,OAAA,SAAA,CAAA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,IAAA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,CAAA;AACA,GAAA,CAAA,CAAA;AACA;;;;"}