import{AuthClient as _}from"@walletconnect/auth-client";import{SignClient as w}from"@walletconnect/sign-client";function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}var v=n;n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(t){if(!S(t)||t<0||isNaN(t))throw TypeError("n must be a positive number");return this._maxListeners=t,this},n.prototype.emit=function(t){var s,e,i,r,o,c;if(this._events||(this._events={}),t==="error"&&(!this._events.error||a(this._events.error)&&!this._events.error.length)){if(s=arguments[1],s instanceof Error)throw s;var g=new Error('Uncaught, unspecified "error" event. ('+s+")");throw g.context=s,g}if(e=this._events[t],f(e))return!1;if(h(e))switch(arguments.length){case 1:e.call(this);break;case 2:e.call(this,arguments[1]);break;case 3:e.call(this,arguments[1],arguments[2]);break;default:r=Array.prototype.slice.call(arguments,1),e.apply(this,r)}else if(a(e))for(r=Array.prototype.slice.call(arguments,1),c=e.slice(),i=c.length,o=0;o<i;o++)c[o].apply(this,r);return!0},n.prototype.addListener=function(t,s){var e;if(!h(s))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",t,h(s.listener)?s.listener:s),this._events[t]?a(this._events[t])?this._events[t].push(s):this._events[t]=[this._events[t],s]:this._events[t]=s,a(this._events[t])&&!this._events[t].warned&&(f(this._maxListeners)?e=n.defaultMaxListeners:e=this._maxListeners,e&&e>0&&this._events[t].length>e&&(this._events[t].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[t].length),typeof console.trace=="function"&&console.trace())),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(t,s){if(!h(s))throw TypeError("listener must be a function");var e=!1;function i(){this.removeListener(t,i),e||(e=!0,s.apply(this,arguments))}return i.listener=s,this.on(t,i),this},n.prototype.removeListener=function(t,s){var e,i,r,o;if(!h(s))throw TypeError("listener must be a function");if(!this._events||!this._events[t])return this;if(e=this._events[t],r=e.length,i=-1,e===s||h(e.listener)&&e.listener===s)delete this._events[t],this._events.removeListener&&this.emit("removeListener",t,s);else if(a(e)){for(o=r;o-- >0;)if(e[o]===s||e[o].listener&&e[o].listener===s){i=o;break}if(i<0)return this;e.length===1?(e.length=0,delete this._events[t]):e.splice(i,1),this._events.removeListener&&this.emit("removeListener",t,s)}return this},n.prototype.removeAllListeners=function(t){var s,e;if(!this._events)return this;if(!this._events.removeListener)return arguments.length===0?this._events={}:this._events[t]&&delete this._events[t],this;if(arguments.length===0){for(s in this._events)s!=="removeListener"&&this.removeAllListeners(s);return this.removeAllListeners("removeListener"),this._events={},this}if(e=this._events[t],h(e))this.removeListener(t,e);else if(e)for(;e.length;)this.removeListener(t,e[e.length-1]);return delete this._events[t],this},n.prototype.listeners=function(t){var s;return!this._events||!this._events[t]?s=[]:h(this._events[t])?s=[this._events[t]]:s=this._events[t].slice(),s},n.prototype.listenerCount=function(t){if(this._events){var s=this._events[t];if(h(s))return 1;if(s)return s.length}return 0},n.listenerCount=function(t,s){return t.listenerCount(s)};function h(t){return typeof t=="function"}function S(t){return typeof t=="number"}function a(t){return typeof t=="object"&&t!==null}function f(t){return t===void 0}const m="wc",y=2,u="Web3Wallet",L=`${m}@${2}:${u}:`,C={database:":memory:"},E="request";class q extends v{constructor(){super()}}class d{constructor(s){this.opts=s}}class p{constructor(s){this.client=s}}class R extends p{constructor(s){super(s),this.init=async()=>{this.signClient=await w.init({core:this.client.core,metadata:this.client.metadata}),this.authClient=await _.init({core:this.client.core,projectId:"",metadata:this.client.metadata}),this.initializeEventListeners()},this.approveSession=async e=>{const{topic:i,acknowledged:r}=await this.signClient.approve({id:e.id,namespaces:e.namespaces});return await r(),this.signClient.session.get(i)},this.rejectSession=async e=>await this.signClient.reject(e),this.updateSession=async e=>await(await this.signClient.update(e)).acknowledged(),this.extendSession=async e=>await(await this.signClient.extend(e)).acknowledged(),this.respondSessionRequest=async e=>await this.signClient.respond(e),this.disconnectSession=async e=>await this.signClient.disconnect(e),this.emitSessionEvent=async e=>await this.signClient.emit(e),this.getActiveSessions=()=>this.signClient.session.getAll().reduce((e,i)=>(e[i.topic]=i,e),{}),this.getPendingSessionProposals=()=>this.signClient.proposal.getAll(),this.getPendingSessionRequests=()=>this.signClient.getPendingSessionRequests(),this.respondAuthRequest=async(e,i)=>await this.authClient.respond(e,i),this.getPendingAuthRequests=()=>this.authClient.requests.getAll().filter(e=>"requester"in e),this.formatMessage=(e,i)=>this.authClient.formatMessage(e,i),this.onSessionRequest=e=>{this.client.events.emit("session_request",e)},this.onSessionProposal=e=>{this.client.events.emit("session_proposal",e)},this.onAuthRequest=e=>{this.client.events.emit("auth_request",e)},this.initializeEventListeners=()=>{this.signClient.events.on("session_proposal",this.onSessionProposal),this.signClient.events.on("session_request",this.onSessionRequest),this.authClient.on("auth_request",this.onAuthRequest)},this.signClient={},this.authClient={}}}class l extends d{constructor(s){super(s),this.events=new v,this.on=(e,i)=>this.events.on(e,i),this.once=(e,i)=>this.events.once(e,i),this.off=(e,i)=>this.events.off(e,i),this.removeListener=(e,i)=>this.events.removeListener(e,i),this.approveSession=async e=>{try{return await this.engine.approveSession(e)}catch(i){throw this.logger.error(i.message),i}},this.rejectSession=async e=>{try{return await this.engine.rejectSession(e)}catch(i){throw this.logger.error(i.message),i}},this.updateSession=async e=>{try{return await this.engine.updateSession(e)}catch(i){throw this.logger.error(i.message),i}},this.extendSession=async e=>{try{return await this.engine.extendSession(e)}catch(i){throw this.logger.error(i.message),i}},this.respondSessionRequest=async e=>{try{return await this.engine.respondSessionRequest(e)}catch(i){throw this.logger.error(i.message),i}},this.disconnectSession=async e=>{try{return await this.engine.disconnectSession(e)}catch(i){throw this.logger.error(i.message),i}},this.emitSessionEvent=async e=>{try{return await this.engine.emitSessionEvent(e)}catch(i){throw this.logger.error(i.message),i}},this.getActiveSessions=()=>{try{return this.engine.getActiveSessions()}catch(e){throw this.logger.error(e.message),e}},this.getPendingSessionProposals=()=>{try{return this.engine.getPendingSessionProposals()}catch(e){throw this.logger.error(e.message),e}},this.getPendingSessionRequests=()=>{try{return this.engine.getPendingSessionRequests()}catch(e){throw this.logger.error(e.message),e}},this.respondAuthRequest=async(e,i)=>{try{return await this.engine.respondAuthRequest(e,i)}catch(r){throw this.logger.error(r.message),r}},this.getPendingAuthRequests=()=>{try{return this.engine.getPendingAuthRequests()}catch(e){throw this.logger.error(e.message),e}},this.formatMessage=(e,i)=>{try{return this.engine.formatMessage(e,i)}catch(r){throw this.logger.error(r.message),r}},this.metadata=s.metadata,this.name=s.name||u,this.core=s.core,this.logger=this.core.logger,this.engine=new R(this)}static async init(s){const e=new l(s);return await e.initialize(),e}async initialize(){this.logger.trace("Initialized");try{await this.engine.init(),this.logger.info("Web3Wallet Initialization Success")}catch(s){throw this.logger.info("Web3Wallet Initialization Failure"),this.logger.error(s.message),s}}}const b=l;export{u as CLIENT_CONTEXT,C as CLIENT_STORAGE_OPTIONS,L as CLIENT_STORAGE_PREFIX,d as IWeb3Wallet,p as IWeb3WalletEngine,q as IWeb3WalletEvents,m as PROTOCOL,y as PROTOCOL_VERSION,E as REQUEST_CONTEXT,b as Web3Wallet,l as default};
//# sourceMappingURL=index.es.js.map
